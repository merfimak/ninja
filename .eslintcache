[{"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\index.js":"1","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\App.js":"2","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\reportWebVitals.js":"3","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Header\\Header.js":"4","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\NavBar\\NavBar.js":"5","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\Profile.js":"6","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\MyPosts\\MyPosts.js":"7","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\MyPosts\\Post\\Post.js":"8","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Dialogs\\Dialogs.js":"9","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.js":"10","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\render.js":"11","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\dialog_reduser.js":"12","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\prpofile_reducer.js":"13","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\redux-store.js":"14","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\MyPosts\\MyPostsContainer.js":"15","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Dialogs\\DialogsContainer.js":"16","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Users\\Users.js":"17","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Users\\UsersContainer.js":"18","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\users_reduser.js":"19","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\common\\Prelouder\\Prelouder.js":"20","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\ProfileContainer.js":"21","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\auth_reducer.js":"22","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Header\\header_container.js":"23","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\api\\api.js":"24"},{"size":572,"mtime":1620747759189,"results":"25","hashOfConfig":"26"},{"size":982,"mtime":1620413546769,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"26"},{"size":606,"mtime":1620803232034,"results":"29","hashOfConfig":"26"},{"size":1041,"mtime":1617731093471,"results":"30","hashOfConfig":"26"},{"size":412,"mtime":1620666079251,"results":"31","hashOfConfig":"26"},{"size":1062,"mtime":1619600105477,"results":"32","hashOfConfig":"26"},{"size":391,"mtime":1614095985978,"results":"33","hashOfConfig":"26"},{"size":2060,"mtime":1617728486686,"results":"34","hashOfConfig":"26"},{"size":901,"mtime":1620219428577,"results":"35","hashOfConfig":"26"},{"size":580,"mtime":1614770210805,"results":"36","hashOfConfig":"26"},{"size":1642,"mtime":1617728224354,"results":"37","hashOfConfig":"26"},{"size":1775,"mtime":1620747407567,"results":"38","hashOfConfig":"26"},{"size":517,"mtime":1620748167528,"results":"39","hashOfConfig":"26"},{"size":932,"mtime":1617646591493,"results":"40","hashOfConfig":"26"},{"size":1389,"mtime":1617728379836,"results":"41","hashOfConfig":"26"},{"size":2418,"mtime":1621279001856,"results":"42","hashOfConfig":"26"},{"size":4741,"mtime":1621278943278,"results":"43","hashOfConfig":"26"},{"size":3458,"mtime":1621278521170,"results":"44","hashOfConfig":"26"},{"size":249,"mtime":1619032032688,"results":"45","hashOfConfig":"26"},{"size":1848,"mtime":1620220135972,"results":"46","hashOfConfig":"26"},{"size":705,"mtime":1620803253521,"results":"47","hashOfConfig":"26"},{"size":1007,"mtime":1620803261823,"results":"48","hashOfConfig":"26"},{"size":1036,"mtime":1621011656976,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"twydh",{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"52"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\index.js",[],["114","115"],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\App.js",["116","117"],"//import logo from './logo.svg';\nimport './App.css';\nimport NavBar from './components/NavBar/NavBar';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport HeaderContainer from './components/Header/header_container';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nconst App = (props) => {\n  \n  return (\n  \t<Router>\n    <div className=\"app_wrepper\">\n\n      <HeaderContainer />\n      <NavBar />\n      <div className=\"app_wrepper_content\">      \n      <Route path=\"/dialogs\" render={ () => <DialogsContainer /> } />\n      <Route path=\"/profile/:userId?\" render={ () => <ProfileContainer /> } />\n      <Route path=\"/users\" render={ () => <UsersContainer /> } />\n      </div>\n        \n        \n         \n\n\n         \n           \n     </div>\n     </Router>\n  )\n}\n\n\n\n\n\n\nexport default App;","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\reportWebVitals.js",[],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Header\\Header.js",[],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\NavBar\\NavBar.js",[],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\Profile.js",["118"],"import classes from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n\t\r\n  return (\r\n   <div>\r\n              <ProfileInfo profile={props.profile}/>\r\n          \r\n            <MyPostsContainer store={props.store}/>\r\n           \r\n\r\n            </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Profile;","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\MyPosts\\MyPosts.js",[],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\MyPosts\\Post\\Post.js",[],["119","120"],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Dialogs\\Dialogs.js",["121","122"],"import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport { NavLink} from 'react-router-dom';\r\nimport {sendMessageCreator} from '../../redux/dialog_reduser.js';\r\nimport {updateNewMessageCreator} from '../../redux/dialog_reduser.js';\r\n\r\nconst DialogItem = (props) =>{\r\n\r\n\tlet path = \"/dialogs/\" + props.id;\r\n\treturn(\r\n\t<div className={classes.dialog}>\r\n\t    <NavLink to={path} activeClassName={classes.active}>\r\n\t    <div className={classes.dialogs_ava}> \r\n\t    <img src=\"img/nicol.jpg\" alt=\"\"></img> \r\n\t     </div>\r\n\t    {props.name}\r\n\t    </NavLink>\r\n\t</div>\r\n\t)\r\n}\r\n\r\nconst Massage = (props) =>{\r\n\treturn(\r\n\t<div className={classes.massage}>\r\n\t    \t\t\t{props.massage}\r\n\t   </div>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\t\r\n//console.log(props)\r\n\r\n\tlet addMassag = () =>{\r\n\t\t props.onAddMassag();\r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\tlet MessageChange = (event) =>{\r\n\t\tlet body = event.target.value;\r\n\t\t props.onMessageChange(body);\r\n\t};\r\n\r\n\t\r\n\t\r\n\t//каждый элемент мы преобразовываем в компоненту DialogItem с получеными данными\r\n\tlet dialogElement = props.massagesPage.dialogsData.map( (elem) => {\r\n\t\treturn [\r\n\t\t\t<DialogItem name={elem.name} id={elem.id} key={elem.id}/>\r\n\t\t]\r\n\t});\r\n\t\r\n\r\n\t/*каждый элемент мы преобразовываем в компоненту Massage с получеными данными*/\r\n\tlet dialogMasstges = props.massagesPage.massagesData.map( (elem) => {\r\n\t\treturn [\r\n\t\t\t<Massage massage={elem.massage} key={elem.id}/>\r\n\t\t]\r\n\t});\r\n\r\n\t  return (\r\n\t\t\t<div className={classes.dialogs}>\r\n\r\n\t\t\t\t\t<div className={classes.dialogs_items}>\t\t\r\n\t\t\t\t\t{dialogElement}\t    \t\r\n\t\t  \t\t</div>\r\n\r\n\t\t\t    <div className={classes.massages}>\r\n\t\t\t    \t{dialogMasstges}\t\r\n\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t    <div>\r\n\t\t\t          <textarea onChange={MessageChange} value={props.massagesPage.NewMessageBody}></textarea>\r\n\t\t\t        </div>\r\n\r\n          \t\t\t<button onClick={ addMassag }>Add Massag</button>\t    \t\t\r\n\t\t\t    </div>\r\n\t   \t  \t</div>\r\n\t   )\r\n}\r\n\r\nexport default Dialogs;","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.js",["123"],"import classes from './ProfileInfo.module.css';\r\nimport Prelouder from '../../common/Prelouder/Prelouder.js'\r\nconst ProfileInfo = (props) => {\r\n\tif(!props.profile){\r\n\t\treturn (\r\n\t\t\t<div>тут должен быть прелудер</div>\r\n\t\t\t)\r\n\r\n\t\t\t\t}else{\r\n\t\t  return (\r\n  \r\n              <div className={classes.profile_info}>\r\n\r\n                <div className={classes.content_img}><img src=\"props.profile.photos.large\" alt=\"\"></img></div>\r\n              <div className={classes.ava_descriptioin}>ava_descriptioin</div>\r\n            \r\n\r\n            \r\n          <div className={classes.ava_descriptioin}> {props.profile.userId}</div>\r\n          <div className={classes.ava_descriptioin}> {props.profile.fullName}</div>\r\n         <div className={classes.ava_descriptioin}>  {props.profile.aboutMe}</div>\r\n              </div>\r\n\r\n            \r\n   )\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default ProfileInfo;","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\render.js",[],["124","125"],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\dialog_reduser.js",["126","127"],"\r\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n      massagesData: [\r\n        {id: 1, massage:\"hi\"},\r\n        {id: 2, massage:\"hui\"},\r\n        {id: 3, massage:\"hoi\"},\r\n        {id: 3, massage:\"hei\"},\r\n      ],\r\n      dialogsData: [\r\n        {id: 1, name:\"Pasha\"},\r\n        {id: 2, name:\"Dima\"},\r\n        {id: 3, name:\"Vova\"},\r\n        {id: 4, name:\"Sasha\"}\r\n      ],\r\n      NewMessageBody:'',\r\n}\r\n\r\n\r\n\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n//урок 47 12 мин, обьяснение. делаем копию обьекта с помощью ...\r\n\r\n\r\nswitch (action.type) {\r\n\r\n  case UPDATE_NEW_MESSAGE_BODY:\r\n     return {...state,//делаем глубинную копию\r\n                 NewMessageBody: action.body\r\n     };\r\n    break;\r\n\r\n\r\n\r\n  case SEND_MESSAGE:\r\n  let body = state.NewMessageBody;\r\n  return {...state,//делаем глубинную копию\r\n                 NewMessageBody: '',\r\n                massagesData: [...state.massagesData, {id: 6, massage:body}],//по старому тут так писалось stateCopy.massagesData.push({id: 6, massage:body});\r\n                \r\n  }\r\n    break;\r\n\r\n\r\n\r\n  default:\r\n   return state;\r\n}\r\n\r\n\r\n\r\n\t\r\n}\r\n\r\n\r\n\r\n\r\n//action creator импортим его в Dialogs.js\r\nexport const sendMessageCreator = () =>{\r\n  return{\r\n    type: SEND_MESSAGE,\r\n  }\r\n}\r\n//action creator импортим его в Dialogs.js\r\nexport const updateNewMessageCreator = (body) =>{\r\n  return{\r\n    type: UPDATE_NEW_MESSAGE_BODY,\r\n    body:body\r\n  }\r\n}\r\n\r\nexport default dialogReducer;","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\prpofile_reducer.js",[],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\redux-store.js",[],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\MyPosts\\MyPostsContainer.js",["128"],"import React from 'react';\r\nimport MyPosts from './MyPosts';\r\nimport {updateNewPostActionCreator} from '../../../redux/prpofile_reducer.js';\r\nimport {addPostActionCreator} from '../../../redux/prpofile_reducer.js';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n// эта функция передает свойства\r\nlet mapStateToProps = (state) =>{\r\n\treturn{\r\n\t\tprofilePage: state.profilePage\r\n\r\n\t}\r\n}\r\n//эта функция передает функции которые мы будем потом использовать в призентациооной компоненте\r\nlet mapDispatchToProps = (dispatch) =>{\r\n\treturn{\r\n\t\tonPostChange:  (text) => {\r\n\t\t\tdispatch(updateNewPostActionCreator(text));\r\n\t\t},\r\n\t\tonAddPost: () => {\r\n\t\t\tdispatch(addPostActionCreator());\r\n\t\t}\r\n\r\n\t\t\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Dialogs\\DialogsContainer.js",["129","130"],"import React from 'react';\r\nimport { NavLink} from 'react-router-dom';\r\nimport {sendMessageCreator} from '../../redux/dialog_reduser.js';\r\nimport {updateNewMessageCreator} from '../../redux/dialog_reduser.js';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\n\r\n// эта функция передает свойства\r\nlet mapStateToProps = (state) =>{\r\n\treturn{\r\n\t\tmassagesPage: state.massagesPage\r\n\r\n\t}\r\n}\r\n//эта функция передает функции которые мы будем потом использовать в призентациооной компоненте\r\nlet mapDispatchToProps = (dispatch) =>{\r\n\treturn{\r\n\t\tonMessageChange:  (body) => {\r\n\t\t\tdispatch(updateNewMessageCreator(body));\r\n\t\t},\r\n\t\tonAddMassag: () => {\r\n\t\t\tdispatch(sendMessageCreator());\r\n\t\t}\r\n\r\n\t\t\r\n\t}\r\n}\r\n\r\n\r\n\r\n//connect внутри использует subscribe, он следит отдельно для этой компоненты когда state измениться\r\n// но сам state не изменяеться потому что мы менять его неможем, мы делаем копию, и он следит когда появится новая копия и тогда уже перерисовывается\r\nconst DialogsContainer = connect(mapStateToProps,mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Users\\Users.js",["131","132"],"import React from 'react';\r\nimport classes from './Users.module.css';\r\nimport * as axios from 'axios';//в axios есть куча всего, * значит что все что есть в axios мы запиздячили в наш axios и теперь через него у нас есть доступ ко всему что там есть.\r\nimport { NavLink} from 'react-router-dom';\r\nimport {usersAPI} from '../../api/api.js';\r\n\r\n\r\nlet Users = (props) => {\r\n//let usersElements = props.users.map( elem => <div>{elem.fullName}</div>)\r\n\r\nconsole.log(props)\r\nlet pagesCount = Math.ceil(props.totalUsersCounter / props.pageSize);\r\n\r\nlet pages = [];\r\nfor(let i = 1; i<=pagesCount;i++){\r\n\tpages.push(i);\r\n}\r\n\treturn(\r\n\t\t<div>\r\n\r\n\r\n<div className={classes.user_pagination}>\r\n\r\n\t{\r\n\t\tpages.map(elem =>{\r\n\t\treturn <span  onClick={() => {props.onPagaChanged(elem)}} key={elem.id} className={props.currentPage === elem ? classes.select_page : \"\"}>{elem}</span>\r\n\t}\r\n\t)}\r\n</div>\r\n\r\n\r\n\r\n\r\n\t<button>get Users</button>\r\n\t <div  className={classes.users}>{\r\n\t \t\r\n\t \tprops.users.map( elem =>\r\n\r\n\t \t <div key={elem.id} className={classes.user}>\r\n\r\n\r\n\t \t\t<div>{elem.name}</div>\r\n\r\n\t \t\t <NavLink to={'/profile/' + elem.id}>\r\n\t \t\t<div className={classes.user_img}><img src={elem.photos.small === null ? \"/img/ava.jpg\" : elem.photos.small} /></div>\r\n\t \t\t</NavLink>\r\n\r\n\t \t\t<div>{elem.id}</div>\r\n\t \t\t<div>{elem.status}</div>\r\n\t \t\t<div>тут должен быть город</div>\r\n\t \t\t<div className={classes.followe_button}>\r\n\r\n\t \t\t\t{elem.followed\r\n\t \t\t\t ? <button disabled={props.followingInProgress.some(id=>id===elem.id)} onClick={() => {\r\n\t \t\t\t \tprops.toggleFollowingInProgress(true,elem.id)\r\n\t \t\t\t \t usersAPI.unFollow(elem.id).then(data =>{\r\n\t\t\t\t\t    \tif(data.resultCode === 0){\r\n\t\t\t\t\t  \t\t\tprops.unFollow(elem.id)\r\n\t\t\t\t\t  \t\t}\r\n\t\t\t\t\t    props.toggleFollowingInProgress(false,elem.id)\t\r\n\t\t\t\t\t\t})\r\n\r\n\t \t\t\t \t}}>Unfollowe</button>\r\n\r\n\r\n\t \t\t\t  : <button disabled={props.followingInProgress.some(id=>id===elem.id)} onClick={() => {\r\n\r\n\t \t\t\t  \tprops.toggleFollowingInProgress(true,elem.id)\r\n\t \t\t\t    usersAPI.follow(elem.id).then(data =>{\r\n\t\t\t\t\t    \tif(data.resultCode === 0){\r\n\t\t\t\t\t  \t\t\tprops.follow(elem.id)\r\n\t\t\t\t\t  \t\t}\r\n\t\t\t\t\t    \t\r\n\t\t\t\t\t\t})\r\n\t \t\t\t    props.toggleFollowingInProgress(false,elem.id)\r\n\r\n\t \t\t\t  }}>followe</button>}\r\n\t\r\n\t \t\t</div>\r\n\t\r\n\r\n\r\n\t \t</div>)\r\n\t }\r\n\t \r\n\t\t\t\r\n\t </div>\r\n\t </div>\r\n\t\r\n\t )\r\n}\r\nexport default Users;","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Users\\UsersContainer.js",["133","134"],"import React from 'react';\r\n\r\nimport {follow,\r\n\tunFollow,\r\n\tsetUsers,\r\n\tsetCurrentPage,\r\n\tsetTotalUsersCount,\r\n\ttoggleFeching,\r\n\ttoggleFollowingInProgress\r\n} from '../../redux/users_reduser.js';\r\n/*\r\nimport {followActionCreator} from '../../redux/users_reduser.js';\r\nimport {unFollowActionCreator} from '../../redux/users_reduser.js';\r\nimport {setUsersActionCreator} from '../../redux/users_reduser.js';\r\nimport {setCurrntPageActionCreator} from '../../redux/users_reduser.js';\r\nimport {setTotalUsersCountctionCreator} from '../../redux/users_reduser.js';\r\nimport {toggleFechingActionCreator} from '../../redux/users_reduser.js';*/\r\nimport { connect } from 'react-redux';\r\nimport Users from './Users';\r\nimport * as axios from 'axios';//в axios есть куча всего, * значит что все что есть в axios мы запиздячили в наш axios и теперь через него у нас есть доступ ко всему что там есть.\r\nimport {usersAPI} from '../../api/api.js';\r\nimport Prelouder from '../common/Prelouder/Prelouder.js'\r\n\r\n//оберточная компонента которая работает с сервером\r\nclass UsersAPIcomponent extends React.Component {\r\n\t\tconstructor(props) {\r\n\t    super(props);\r\n\t  }\r\n\t  \r\n\t\t//сработает когда дом будет построен\r\n\t\tcomponentDidMount() {\r\n\t\t\tthis.props.toggleFeching(true);\r\n\t\t\t usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data =>{\r\n\t\t    \tthis.props.toggleFeching(false);\r\n\t\t\tthis.props.setUsers(data.items);\r\n\t\t\tthis.props.setTotalUsersCount(data.totalCount);\r\n\t\t\t})\r\n\r\n\t\t  }\r\n\t\tonPagaChanged = (pageNumber) => {\r\n\t\t\t\tthis.props.toggleFeching(true);\r\n\t\t\tthis.props.setCurrentPage(pageNumber)\r\n\t\t\t usersAPI.getUsers(pageNumber, this.props.pageSize).then(data =>{\r\n\t\t    this.props.toggleFeching(false);\r\n\t\t\tthis.props.setUsers(data.items);\r\n\t\t\t})\r\n\t\t}\r\n\t\trender(){\r\n\t\treturn( \r\n\t\t\t\t<div>\r\n\t\t\t\t<Prelouder isFetching={this.props.isFetching} />\r\n\t\t\t\t<Users users={this.props.users}\r\n\t\t\t\t\t\tunFollow={this.props.unFollow}\r\n\t\t\t\t\t\tfollow={this.props.follow}\r\n\t\t\t\t\t\tonPagaChanged={this.onPagaChanged}\r\n\t\t\t\t\t\tcurrentPage={this.props.currentPage}\r\n\t\t\t\t\t\ttotalUsersCounter={this.props.totalUsersCounter}\r\n\t\t\t\t\t\tpageSize={this.props.pageSize}\r\n\t\t\t\t\t\tfollowingInProgress={this.props.followingInProgress}\r\n\t\t\t\t\t\ttoggleFollowingInProgress={this.props.toggleFollowingInProgress}\r\n\t\t\t\t\t\t\r\n\t\t\t\t/>\r\n\t\t\t\t\r\n\t\t\t\t </div>\r\n\t\t )\r\n\t\t}\r\n}\r\n\r\n\r\n//оберточная компонента которая работает с стором\r\n// эта функция передает свойства\r\nlet mapStateToProps = (state) =>{\r\n\treturn{\r\n\t\tusers: state.usersPage.users,\r\n\t\tpageSize: state.usersPage.pageSize,\r\n\t\ttotalUsersCounter: state.usersPage.totalUsersCounter,\r\n\t\tcurrentPage: state.usersPage.currentPage,\r\n\t\tisFetching: state.usersPage.isFetching,\r\n\t\tfollowingInProgress: state.usersPage.followingInProgress,\r\n\r\n\t}\r\n}\r\n//эта функция передает функции которые мы будем потом использовать в призентациооной компоненте\r\n/*let mapDispatchToProps = (dispatch) =>{\r\n\treturn{\r\n\t\tfollow:  (userID) => {\r\n\t\t\tdispatch(followActionCreator(userID));\r\n\t\t},\r\n\t\tunFollow: (userID) => {\r\n\t\t\tdispatch(unFollowActionCreator(userID));\r\n\t\t},\r\n\t\tsetUsers: (users) => {\r\n\t\t\tdispatch(setUsersActionCreator(users));\r\n\t\t},\r\n\t\tsetCurrentPage: (currentPage) => {\r\n\t\t\tdispatch(setCurrntPageActionCreator(currentPage));\r\n\t\t},\r\n\t\tsetTotalUsersCount: (currentPage) => {\r\n\t\t\tdispatch(setTotalUsersCountctionCreator(currentPage));\r\n\t\t},\r\n\t\ttoggleFeching: (isFetching) => {\r\n\t\t\tdispatch(toggleFechingActionCreator(isFetching));\r\n\t\t}\r\n\r\n\t\t\r\n\t}\r\n}*/\r\n\r\n\r\n\r\n//connect внутри использует subscribe, он следит отдельно для этой компоненты когда state измениться\r\n// но сам state не изменяеться потому что мы менять его неможем, мы делаем копию, и он следит когда появится новая копия и тогда уже перерисовывается\r\n//const UsersContainer = connect(mapStateToProps,mapDispatchToProps)(UsersAPIcomponent);cтарая запись\r\n//connect внутри себя создает ActionCreator, и поэтому можно писать вот так вот сокращенно\r\nconst UsersContainer = connect(mapStateToProps,{\r\n\tfollow,\r\n\tunFollow,\r\n\tsetUsers,\r\n\tsetCurrentPage,\r\n\tsetTotalUsersCount,\r\n\ttoggleFeching,\r\n\ttoggleFollowingInProgress\r\n})(UsersAPIcomponent);//UsersAPIcomponent находиться в этом же файле\r\n\r\nexport default UsersContainer;","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\users_reduser.js",["135","136","137","138","139","140","141"],"\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst TOTAL_COUNT = 'TOTAL_COUNT';\r\nconst   TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst   TOGGLE_IS_FOLOWING_PROGRESS = 'TOGGLE_IS_FOLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n      users: [],\r\n      pageSize: 5,\r\n      totalUsersCounter: 0,\r\n      currentPage: 1,\r\n      isFetching: false,\r\n      followingInProgress: []\r\n}\r\n\r\n\r\n\r\n\r\nconst usersReduser = (state = initialState, action) => {\r\n//урок 47 12 мин, обьяснение. делаем копию обьекта с помощью ...\r\n\r\n\r\nswitch (action.type) {\r\n      case FOLLOW:\r\n       return {\r\n        ...state,//делаем копию state\r\n          users: state.users.map( u =>{//проходимся по всем элементам массива\r\n            if(u.id === action.userID){//человек нажимает кнопку на какомто юзере, его id приходит в action.\r\n              return {...u, followed: true};\r\n            }\r\n            return u;\r\n          })\r\n       };\r\n      break;\r\n       case UNFOLLOW:\r\n        return {\r\n        ...state,//делаем копию state\r\n          users: state.users.map( u =>{//проходимся по всем элементам массива\r\n            if(u.id === action.userID){\r\n              return {...u, followed: false};\r\n            }\r\n            return u;\r\n          })\r\n       };\r\n      break;\r\n       case SET_USERS:\r\n        return {\r\n        ...state,\r\n            users: [...action.users]//засовываем в users масив из state(делаем копию глубинную) и зсовываем тудаже юзеров из action\r\n       };\r\n      break;\r\n      case SET_CURRENT_PAGE:\r\n        return {\r\n        ...state,\r\n            currentPage: action.currentPage\r\n       };\r\n      break;\r\n       case TOTAL_COUNT:\r\n        return {\r\n        ...state,\r\n            totalUsersCounter: action.totalCount\r\n       };\r\n      break;\r\n       case TOGGLE_IS_FETCHING:\r\n        return {\r\n        ...state,\r\n            isFetching: action.isFetching\r\n       };\r\n        case TOGGLE_IS_FOLOWING_PROGRESS:\r\n        return {\r\n        ...state,\r\n            followingInProgress: action.isFetching\r\n             ? [...state.followingInProgress, action.userId]\r\n             : state.followingInProgress.filter(id=>id != action.userId)\r\n       };\r\n      break;\r\n      default:\r\n       return state;\r\n    }\r\n\t\r\n}\r\n\r\n\r\n\r\n\r\n//action creator импортим его в Users.js\r\nexport const follow = (userID) =>{\r\n  return{\r\n    type: FOLLOW,\r\n    userID\r\n  }\r\n}\r\n\r\n//action creator импортим его в Users.js\r\nexport const unFollow = (userID) =>{\r\n  return{\r\n    type: UNFOLLOW,\r\n    userID\r\n  }\r\n}\r\n\r\nexport const setUsers = (users) =>{\r\n  return{\r\n    type: SET_USERS,\r\n    users\r\n  }\r\n}\r\n\r\nexport const setCurrentPage = (currentPage) =>{\r\n  return{\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n  }\r\n}\r\n\r\nexport const setTotalUsersCount = (totalCount) =>{\r\n  return{\r\n    type: TOTAL_COUNT,\r\n    totalCount\r\n  }\r\n}\r\n\r\nexport const toggleFeching = (isFetching) =>{\r\n  return{\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n  }\r\n}\r\n\r\nexport const toggleFollowingInProgress = (isFetching, userId) =>{\r\n  return{\r\n    type: TOGGLE_IS_FOLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n  }\r\n}\r\n\r\n\r\nexport default usersReduser;","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\common\\Prelouder\\Prelouder.js",["142"],"import React from 'react';\r\nimport prelouder from '../../../assets/images/prelouder.gif';\r\n\r\n\r\nlet Prelouder = (props) => {\r\n\r\nreturn(\r\n\r\n<div>\r\n{props.isFetching ? <img src={prelouder} /> : null}\r\n\r\n</div>\r\n\t\r\n)\r\n\r\n\r\n}\t\r\n\r\nexport default Prelouder;","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\ProfileContainer.js",["143"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {setUsersProfile} from '../../redux/prpofile_reducer.js';//тут ошибка в названиее prpofile_reducer\r\nimport Profile from './Profile';\r\nimport * as axios from 'axios';//в axios есть куча всего, * значит что все что есть в axios мы запиздячили в наш axios и теперь через него у нас есть доступ ко всему что там есть.\r\nimport { withRouter } from \"react-router\";\r\n\r\n//оберточная компонента которая работает с сервером\r\nclass ProfileAPIContainer extends React.Component {\r\n\t\tconstructor(props) {\r\n\t    super(props);\r\n\t  }\r\n\r\n\r\n\t//сработает когда дом будет построен\r\n\t\tcomponentDidMount() {\r\n\t\t\tlet userId = this.props.match.params.userId;\r\n\t\t\tif(!userId){\r\n\t\t\t\tuserId = 2;\r\n\t\t\t}\r\n\r\n\t\t\t axios.get(`https://social-network.samuraijs.com/api/1.0/profile/`+userId)\r\n\t\t    .then(response =>{\r\n\t\t    \tthis.props.setUsersProfile(response.data);\r\n\t\t\t//console.log(response.data)\r\n\t\t\t})\r\n\r\n\t\t  }\r\n\r\n\r\n\r\n\r\n\trender(){\r\n\t\t return (\r\n  \t\t\t <div>\r\n              <Profile {...this.props} profile={this.props.profile} />\r\n           \r\n\r\n            </div>\r\n   )\r\n\t}\r\n \r\n}\r\n\r\n///////////////////////////////////////////////////////////////////оберточная компонента которая работает с стором\r\nlet mapStateToProps = (state) =>({\r\n\tprofile: state.profilePage.profile\r\n});\r\n\r\n\r\nlet withUrlDataProfileAPIContainer = withRouter(ProfileAPIContainer);//withRouter как и connect вернет ProfileAPIContainer но уже с добавлениями данных из url\r\n\r\n\r\nexport default connect(mapStateToProps,{setUsersProfile})(withUrlDataProfileAPIContainer);","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\auth_reducer.js",[],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Header\\header_container.js",["144","145","146"],"import React from 'react';\r\nimport  classes from './Header.module.css';\r\nimport { NavLink} from 'react-router-dom';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport * as axios from 'axios';\r\nimport {setAuthUserDataCreator}  from '../../redux/auth_reducer.js';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\tconstructor(props) {\r\n\t    super(props);\r\n\t  }\r\n\r\n\t\tcomponentDidMount() {\r\n\t\t\r\n\t\t\t axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`,{withCredentials: true})\r\n\t\t    .then(response =>{\r\n\t\t  \t\tif(response.data.resultCode === 0){\r\n\t\t  \t\t\tthis.props.setAuthUserDataCreator(response.data.data)\r\n\t\t  \t\t}\r\n\t\t\t})\r\n\r\n\t\t  }\r\n\r\n\r\n\r\n\r\n\trender(){\r\n\r\n  return (\r\n\t\t\t<Header {...this.props}/> \r\n  \t  )\r\n}\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n\treturn{\r\n\t\tid: state.auth.id,\r\n\t\temail: state.auth.email,\r\n\t\tlogin: state.auth.login,\r\n\t\tisAuth: state.auth.isAuth,\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,{setAuthUserDataCreator})(HeaderContainer);","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\api\\api.js",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":10,"column":3,"nodeType":"153","messageId":"154","endLine":10,"endColumn":9},{"ruleId":"151","severity":1,"message":"155","line":12,"column":3,"nodeType":"153","messageId":"154","endLine":12,"endColumn":7},{"ruleId":"151","severity":1,"message":"156","line":1,"column":8,"nodeType":"153","messageId":"154","endLine":1,"endColumn":15},{"ruleId":"147","replacedBy":"157"},{"ruleId":"149","replacedBy":"158"},{"ruleId":"151","severity":1,"message":"159","line":4,"column":9,"nodeType":"153","messageId":"154","endLine":4,"endColumn":27},{"ruleId":"151","severity":1,"message":"160","line":5,"column":9,"nodeType":"153","messageId":"154","endLine":5,"endColumn":32},{"ruleId":"151","severity":1,"message":"161","line":2,"column":8,"nodeType":"153","messageId":"154","endLine":2,"endColumn":17},{"ruleId":"147","replacedBy":"162"},{"ruleId":"149","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":34,"column":5,"nodeType":"166","messageId":"167","endLine":34,"endColumn":11},{"ruleId":"164","severity":1,"message":"165","line":45,"column":5,"nodeType":"166","messageId":"167","endLine":45,"endColumn":11},{"ruleId":"151","severity":1,"message":"168","line":1,"column":8,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13},{"ruleId":"151","severity":1,"message":"168","line":1,"column":8,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13},{"ruleId":"151","severity":1,"message":"169","line":2,"column":10,"nodeType":"153","messageId":"154","endLine":2,"endColumn":17},{"ruleId":"151","severity":1,"message":"170","line":3,"column":13,"nodeType":"153","messageId":"154","endLine":3,"endColumn":18},{"ruleId":"171","severity":1,"message":"172","line":45,"column":39,"nodeType":"173","endLine":45,"endColumn":116},{"ruleId":"151","severity":1,"message":"170","line":20,"column":13,"nodeType":"153","messageId":"154","endLine":20,"endColumn":18},{"ruleId":"174","severity":1,"message":"175","line":26,"column":3,"nodeType":"176","messageId":"177","endLine":28,"endColumn":5},{"ruleId":"164","severity":1,"message":"165","line":37,"column":7,"nodeType":"166","messageId":"167","endLine":37,"endColumn":13},{"ruleId":"164","severity":1,"message":"165","line":48,"column":7,"nodeType":"166","messageId":"167","endLine":48,"endColumn":13},{"ruleId":"164","severity":1,"message":"165","line":54,"column":7,"nodeType":"166","messageId":"167","endLine":54,"endColumn":13},{"ruleId":"164","severity":1,"message":"165","line":60,"column":7,"nodeType":"166","messageId":"167","endLine":60,"endColumn":13},{"ruleId":"164","severity":1,"message":"165","line":66,"column":7,"nodeType":"166","messageId":"167","endLine":66,"endColumn":13},{"ruleId":"178","severity":1,"message":"179","line":77,"column":56,"nodeType":"180","messageId":"181","endLine":77,"endColumn":58},{"ruleId":"164","severity":1,"message":"165","line":79,"column":7,"nodeType":"166","messageId":"167","endLine":79,"endColumn":13},{"ruleId":"171","severity":1,"message":"172","line":10,"column":21,"nodeType":"173","endLine":10,"endColumn":44},{"ruleId":"174","severity":1,"message":"175","line":10,"column":3,"nodeType":"176","messageId":"177","endLine":12,"endColumn":5},{"ruleId":"151","severity":1,"message":"156","line":2,"column":9,"nodeType":"153","messageId":"154","endLine":2,"endColumn":16},{"ruleId":"151","severity":1,"message":"169","line":3,"column":10,"nodeType":"153","messageId":"154","endLine":3,"endColumn":17},{"ruleId":"174","severity":1,"message":"175","line":10,"column":2,"nodeType":"176","messageId":"177","endLine":12,"endColumn":5},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'classes' is defined but never used.",["182"],["183"],"'sendMessageCreator' is defined but never used.","'updateNewMessageCreator' is defined but never used.","'Prelouder' is defined but never used.",["182"],["183"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'React' is defined but never used.","'NavLink' is defined but never used.","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]