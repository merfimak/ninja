[{"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\index.js":"1","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\App.js":"2","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\reportWebVitals.js":"3","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Header\\Header.js":"4","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\NavBar\\NavBar.js":"5","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\Profile.js":"6","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\MyPosts\\MyPosts.js":"7","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\MyPosts\\Post\\Post.js":"8","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Dialogs\\Dialogs.js":"9","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.js":"10","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\render.js":"11","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\dialog_reduser.js":"12","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\prpofile_reducer.js":"13","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\redux-store.js":"14","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\MyPosts\\MyPostsContainer.js":"15","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Dialogs\\DialogsContainer.js":"16","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Users\\Users.js":"17","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Users\\UsersContainer.js":"18","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\users_reduser.js":"19"},{"size":614,"mtime":1617732185175,"results":"20","hashOfConfig":"21"},{"size":918,"mtime":1618134064978,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":380,"mtime":1612380531784,"results":"24","hashOfConfig":"21"},{"size":1041,"mtime":1617731093471,"results":"25","hashOfConfig":"21"},{"size":397,"mtime":1616612533600,"results":"26","hashOfConfig":"21"},{"size":1060,"mtime":1617646573342,"results":"27","hashOfConfig":"21"},{"size":391,"mtime":1614095985978,"results":"28","hashOfConfig":"21"},{"size":2060,"mtime":1617728486686,"results":"29","hashOfConfig":"21"},{"size":407,"mtime":1614095931583,"results":"30","hashOfConfig":"21"},{"size":580,"mtime":1614770210805,"results":"31","hashOfConfig":"21"},{"size":1642,"mtime":1617728224354,"results":"32","hashOfConfig":"21"},{"size":1391,"mtime":1617646174035,"results":"33","hashOfConfig":"21"},{"size":450,"mtime":1618134373524,"results":"34","hashOfConfig":"21"},{"size":932,"mtime":1617646591493,"results":"35","hashOfConfig":"21"},{"size":1389,"mtime":1617728379836,"results":"36","hashOfConfig":"21"},{"size":2162,"mtime":1618334023969,"results":"37","hashOfConfig":"21"},{"size":1476,"mtime":1618226838200,"results":"38","hashOfConfig":"21"},{"size":1990,"mtime":1618140678238,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"twydh",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"42"},"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\index.js",[],["88","89"],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\App.js",["90","91"],"//import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport NavBar from './components/NavBar/NavBar';\nimport Profile from './components/Profile/Profile';\nimport UsersContainer from './components/Users/UsersContainer';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nconst App = (props) => {\n  \n  return (\n  \t<Router>\n    <div className=\"app_wrepper\">\n\n      <Header />\n      <NavBar />\n      <div className=\"app_wrepper_content\">      \n      <Route path=\"/dialogs\" render={ () => <DialogsContainer /> } />\n      <Route path=\"/profile\" render={ () => <Profile /> } />\n      <Route path=\"/users\" render={ () => <UsersContainer /> } />\n      </div>\n        \n        \n         \n\n\n         \n           \n     </div>\n     </Router>\n  )\n}\n\n\n\n\n\n\nexport default App;","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\reportWebVitals.js",[],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Header\\Header.js",[],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\NavBar\\NavBar.js",[],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\Profile.js",["92"],"import classes from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n\t//console.log(props)\r\n  return (\r\n   <div>\r\n              <ProfileInfo />\r\n            <MyPostsContainer store={props.store}/>\r\n           \r\n\r\n            </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Profile;","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\MyPosts\\MyPosts.js",[],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\MyPosts\\Post\\Post.js",[],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Dialogs\\Dialogs.js",["93","94"],"import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport { NavLink} from 'react-router-dom';\r\nimport {sendMessageCreator} from '../../redux/dialog_reduser.js';\r\nimport {updateNewMessageCreator} from '../../redux/dialog_reduser.js';\r\n\r\nconst DialogItem = (props) =>{\r\n\r\n\tlet path = \"/dialogs/\" + props.id;\r\n\treturn(\r\n\t<div className={classes.dialog}>\r\n\t    <NavLink to={path} activeClassName={classes.active}>\r\n\t    <div className={classes.dialogs_ava}> \r\n\t    <img src=\"img/nicol.jpg\" alt=\"\"></img> \r\n\t     </div>\r\n\t    {props.name}\r\n\t    </NavLink>\r\n\t</div>\r\n\t)\r\n}\r\n\r\nconst Massage = (props) =>{\r\n\treturn(\r\n\t<div className={classes.massage}>\r\n\t    \t\t\t{props.massage}\r\n\t   </div>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\t\r\n//console.log(props)\r\n\r\n\tlet addMassag = () =>{\r\n\t\t props.onAddMassag();\r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\tlet MessageChange = (event) =>{\r\n\t\tlet body = event.target.value;\r\n\t\t props.onMessageChange(body);\r\n\t};\r\n\r\n\t\r\n\t\r\n\t//каждый элемент мы преобразовываем в компоненту DialogItem с получеными данными\r\n\tlet dialogElement = props.massagesPage.dialogsData.map( (elem) => {\r\n\t\treturn [\r\n\t\t\t<DialogItem name={elem.name} id={elem.id} key={elem.id}/>\r\n\t\t]\r\n\t});\r\n\t\r\n\r\n\t/*каждый элемент мы преобразовываем в компоненту Massage с получеными данными*/\r\n\tlet dialogMasstges = props.massagesPage.massagesData.map( (elem) => {\r\n\t\treturn [\r\n\t\t\t<Massage massage={elem.massage} key={elem.id}/>\r\n\t\t]\r\n\t});\r\n\r\n\t  return (\r\n\t\t\t<div className={classes.dialogs}>\r\n\r\n\t\t\t\t\t<div className={classes.dialogs_items}>\t\t\r\n\t\t\t\t\t{dialogElement}\t    \t\r\n\t\t  \t\t</div>\r\n\r\n\t\t\t    <div className={classes.massages}>\r\n\t\t\t    \t{dialogMasstges}\t\r\n\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t    <div>\r\n\t\t\t          <textarea onChange={MessageChange} value={props.massagesPage.NewMessageBody}></textarea>\r\n\t\t\t        </div>\r\n\r\n          \t\t\t<button onClick={ addMassag }>Add Massag</button>\t    \t\t\r\n\t\t\t    </div>\r\n\t   \t  \t</div>\r\n\t   )\r\n}\r\n\r\nexport default Dialogs;","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.js",[],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\render.js",[],["95","96"],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\dialog_reduser.js",["97","98"],"\r\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n      massagesData: [\r\n        {id: 1, massage:\"hi\"},\r\n        {id: 2, massage:\"hui\"},\r\n        {id: 3, massage:\"hoi\"},\r\n        {id: 3, massage:\"hei\"},\r\n      ],\r\n      dialogsData: [\r\n        {id: 1, name:\"Pasha\"},\r\n        {id: 2, name:\"Dima\"},\r\n        {id: 3, name:\"Vova\"},\r\n        {id: 4, name:\"Sasha\"}\r\n      ],\r\n      NewMessageBody:'',\r\n}\r\n\r\n\r\n\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n//урок 47 12 мин, обьяснение. делаем копию обьекта с помощью ...\r\n\r\n\r\nswitch (action.type) {\r\n\r\n  case UPDATE_NEW_MESSAGE_BODY:\r\n     return {...state,//делаем глубинную копию\r\n                 NewMessageBody: action.body\r\n     };\r\n    break;\r\n\r\n\r\n\r\n  case SEND_MESSAGE:\r\n  let body = state.NewMessageBody;\r\n  return {...state,//делаем глубинную копию\r\n                 NewMessageBody: '',\r\n                massagesData: [...state.massagesData, {id: 6, massage:body}],//по старому тут так писалось stateCopy.massagesData.push({id: 6, massage:body});\r\n                \r\n  }\r\n    break;\r\n\r\n\r\n\r\n  default:\r\n   return state;\r\n}\r\n\r\n\r\n\r\n\t\r\n}\r\n\r\n\r\n\r\n\r\n//action creator импортим его в Dialogs.js\r\nexport const sendMessageCreator = () =>{\r\n  return{\r\n    type: SEND_MESSAGE,\r\n  }\r\n}\r\n//action creator импортим его в Dialogs.js\r\nexport const updateNewMessageCreator = (body) =>{\r\n  return{\r\n    type: UPDATE_NEW_MESSAGE_BODY,\r\n    body:body\r\n  }\r\n}\r\n\r\nexport default dialogReducer;","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\prpofile_reducer.js",[],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\redux-store.js",[],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\MyPosts\\MyPostsContainer.js",["99"],"import React from 'react';\r\nimport MyPosts from './MyPosts';\r\nimport {updateNewPostActionCreator} from '../../../redux/prpofile_reducer.js';\r\nimport {addPostActionCreator} from '../../../redux/prpofile_reducer.js';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n// эта функция передает свойства\r\nlet mapStateToProps = (state) =>{\r\n\treturn{\r\n\t\tprofilePage: state.profilePage\r\n\r\n\t}\r\n}\r\n//эта функция передает функции которые мы будем потом использовать в призентациооной компоненте\r\nlet mapDispatchToProps = (dispatch) =>{\r\n\treturn{\r\n\t\tonPostChange:  (text) => {\r\n\t\t\tdispatch(updateNewPostActionCreator(text));\r\n\t\t},\r\n\t\tonAddPost: () => {\r\n\t\t\tdispatch(addPostActionCreator());\r\n\t\t}\r\n\r\n\t\t\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Dialogs\\DialogsContainer.js",["100","101"],"import React from 'react';\r\nimport { NavLink} from 'react-router-dom';\r\nimport {sendMessageCreator} from '../../redux/dialog_reduser.js';\r\nimport {updateNewMessageCreator} from '../../redux/dialog_reduser.js';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\n\r\n// эта функция передает свойства\r\nlet mapStateToProps = (state) =>{\r\n\treturn{\r\n\t\tmassagesPage: state.massagesPage\r\n\r\n\t}\r\n}\r\n//эта функция передает функции которые мы будем потом использовать в призентациооной компоненте\r\nlet mapDispatchToProps = (dispatch) =>{\r\n\treturn{\r\n\t\tonMessageChange:  (body) => {\r\n\t\t\tdispatch(updateNewMessageCreator(body));\r\n\t\t},\r\n\t\tonAddMassag: () => {\r\n\t\t\tdispatch(sendMessageCreator());\r\n\t\t}\r\n\r\n\t\t\r\n\t}\r\n}\r\n\r\n\r\n\r\n//connect внутри использует subscribe, он следит отдельно для этой компоненты когда state измениться\r\n// но сам state не изменяеться потому что мы менять его неможем, мы делаем копию, и он следит когда появится новая копия и тогда уже перерисовывается\r\nconst DialogsContainer = connect(mapStateToProps,mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Users\\Users.js",["102"],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Users\\UsersContainer.js",["103"],"import React from 'react';\r\nimport {followActionCreator} from '../../redux/users_reduser.js';\r\nimport {unFollowActionCreator} from '../../redux/users_reduser.js';\r\nimport {setUsersActionCreator} from '../../redux/users_reduser.js';\r\nimport Users from './Users';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\n\r\n// эта функция передает свойства\r\nlet mapStateToProps = (state) =>{\r\n\treturn{\r\n\t\tusers: state.usersPage.users\r\n\r\n\t}\r\n}\r\n//эта функция передает функции которые мы будем потом использовать в призентациооной компоненте\r\nlet mapDispatchToProps = (dispatch) =>{\r\n\treturn{\r\n\t\tfollow:  (userID) => {\r\n\t\t\tdispatch(followActionCreator(userID));\r\n\t\t},\r\n\t\tunFollow: (userID) => {\r\n\t\t\tdispatch(unFollowActionCreator(userID));\r\n\t\t},\r\n\t\tsetUsers: (users) => {\r\n\t\t\tdispatch(setUsersActionCreator(users));\r\n\t\t}\r\n\r\n\t\t\r\n\t}\r\n}\r\n\r\n\r\n\r\n//connect внутри использует subscribe, он следит отдельно для этой компоненты когда state измениться\r\n// но сам state не изменяеться потому что мы менять его неможем, мы делаем копию, и он следит когда появится новая копия и тогда уже перерисовывается\r\nconst UsersContainer = connect(mapStateToProps,mapDispatchToProps)(Users);\r\n\r\nexport default UsersContainer;","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\users_reduser.js",["104","105","106"],"\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\n\r\nlet initialState = {\r\n      users: []\r\n}\r\n\r\n\r\n\r\n\r\nconst usersReduser = (state = initialState, action) => {\r\n//урок 47 12 мин, обьяснение. делаем копию обьекта с помощью ...\r\n\r\n\r\nswitch (action.type) {\r\n      case FOLLOW:\r\n       return {\r\n        ...state,//делаем копию state\r\n          users: state.users.map( u =>{//проходимся по всем элементам массива\r\n            if(u.id === action.userID){//человек нажимает кнопку на какомто юзере, его id приходит в action.\r\n              return {...u, followed: true};\r\n            }\r\n            return u;\r\n          })\r\n       };\r\n      break;\r\n\r\n       case UNFOLLOW:\r\n        return {\r\n        ...state,//делаем копию state\r\n          users: state.users.map( u =>{//проходимся по всем элементам массива\r\n            if(u.id === action.userID){\r\n              return {...u, followed: false};\r\n            }\r\n            return u;\r\n          })\r\n       };\r\n      break;\r\n\r\n       case SET_USERS:\r\n        return {\r\n        ...state,\r\n            users: [...state.users, ...action.users]//засовываем в users масив из state(делаем копию глубинную) и зсовываем тудаже юзеров из action\r\n       };\r\n      break;\r\n\r\n      default:\r\n       return state;\r\n    }\r\n\t\r\n}\r\n\r\n\r\n\r\n\r\n//action creator импортим его в Users.js\r\nexport const followActionCreator = (userID) =>{\r\n  return{\r\n    type: FOLLOW,\r\n    userID\r\n  }\r\n}\r\n\r\n//action creator импортим его в Users.js\r\nexport const unFollowActionCreator = (userID) =>{\r\n  return{\r\n    type: UNFOLLOW,\r\n    userID\r\n  }\r\n}\r\n\r\nexport const setUsersActionCreator = (users) =>{\r\n  return{\r\n    type: SET_USERS,\r\n    users\r\n  }\r\n}\r\n\r\nexport default usersReduser;",{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":10,"column":3,"nodeType":"113","messageId":"114","endLine":10,"endColumn":9},{"ruleId":"111","severity":1,"message":"115","line":12,"column":3,"nodeType":"113","messageId":"114","endLine":12,"endColumn":7},{"ruleId":"111","severity":1,"message":"116","line":1,"column":8,"nodeType":"113","messageId":"114","endLine":1,"endColumn":15},{"ruleId":"111","severity":1,"message":"117","line":4,"column":9,"nodeType":"113","messageId":"114","endLine":4,"endColumn":27},{"ruleId":"111","severity":1,"message":"118","line":5,"column":9,"nodeType":"113","messageId":"114","endLine":5,"endColumn":32},{"ruleId":"107","replacedBy":"119"},{"ruleId":"109","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":34,"column":5,"nodeType":"123","messageId":"124","endLine":34,"endColumn":11},{"ruleId":"121","severity":1,"message":"122","line":45,"column":5,"nodeType":"123","messageId":"124","endLine":45,"endColumn":11},{"ruleId":"111","severity":1,"message":"125","line":1,"column":8,"nodeType":"113","messageId":"114","endLine":1,"endColumn":13},{"ruleId":"111","severity":1,"message":"125","line":1,"column":8,"nodeType":"113","messageId":"114","endLine":1,"endColumn":13},{"ruleId":"111","severity":1,"message":"126","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":17},{"ruleId":"127","severity":1,"message":"128","line":34,"column":39,"nodeType":"129","endLine":34,"endColumn":115},{"ruleId":"111","severity":1,"message":"125","line":1,"column":8,"nodeType":"113","messageId":"114","endLine":1,"endColumn":13},{"ruleId":"121","severity":1,"message":"122","line":28,"column":7,"nodeType":"123","messageId":"124","endLine":28,"endColumn":13},{"ruleId":"121","severity":1,"message":"122","line":40,"column":7,"nodeType":"123","messageId":"124","endLine":40,"endColumn":13},{"ruleId":"121","severity":1,"message":"122","line":47,"column":7,"nodeType":"123","messageId":"124","endLine":47,"endColumn":13},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'classes' is defined but never used.","'sendMessageCreator' is defined but never used.","'updateNewMessageCreator' is defined but never used.",["130"],["131"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'React' is defined but never used.","'NavLink' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]