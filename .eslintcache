[{"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\index.js":"1","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\App.js":"2","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\reportWebVitals.js":"3","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Header\\Header.js":"4","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\NavBar\\NavBar.js":"5","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\Profile.js":"6","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\MyPosts\\MyPosts.js":"7","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\MyPosts\\Post\\Post.js":"8","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Dialogs\\Dialogs.js":"9","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.js":"10","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\render.js":"11","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\dialog_reduser.js":"12","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\prpofile_reducer.js":"13","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\redux-store.js":"14","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\MyPosts\\MyPostsContainer.js":"15","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Dialogs\\DialogsContainer.js":"16","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Users\\Users.js":"17","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Users\\UsersContainer.js":"18","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\users_reduser.js":"19","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\common\\Prelouder\\Prelouder.js":"20","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\ProfileContainer.js":"21","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\auth_reducer.js":"22","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Header\\header_container.js":"23","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\api\\api.js":"24","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Login\\login.js":"25","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Login\\Login.js":"26","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\hoc\\withAuthRedirect.js":"27","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.js":"28","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\app_reducer.js":"29","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\users_selectors.js":"30","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.js":"31"},{"size":404,"mtime":1624466822145,"results":"32","hashOfConfig":"33"},{"size":2249,"mtime":1624467111388,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"33"},{"size":736,"mtime":1623169172763,"results":"36","hashOfConfig":"33"},{"size":1041,"mtime":1617731093471,"results":"37","hashOfConfig":"33"},{"size":471,"mtime":1623175745649,"results":"38","hashOfConfig":"33"},{"size":1072,"mtime":1623589356819,"results":"39","hashOfConfig":"33"},{"size":391,"mtime":1614095985978,"results":"40","hashOfConfig":"33"},{"size":3119,"mtime":1623095014909,"results":"41","hashOfConfig":"33"},{"size":1054,"mtime":1624552508823,"results":"42","hashOfConfig":"33"},{"size":580,"mtime":1614770210805,"results":"43","hashOfConfig":"33"},{"size":1691,"mtime":1623094993372,"results":"44","hashOfConfig":"33"},{"size":3830,"mtime":1623840244479,"results":"45","hashOfConfig":"33"},{"size":948,"mtime":1624384042035,"results":"46","hashOfConfig":"33"},{"size":932,"mtime":1617646591493,"results":"47","hashOfConfig":"33"},{"size":1717,"mtime":1623094260821,"results":"48","hashOfConfig":"33"},{"size":3572,"mtime":1624790407040,"results":"49","hashOfConfig":"33"},{"size":5463,"mtime":1624786439345,"results":"50","hashOfConfig":"33"},{"size":4755,"mtime":1624777799678,"results":"51","hashOfConfig":"33"},{"size":249,"mtime":1619032032688,"results":"52","hashOfConfig":"33"},{"size":2953,"mtime":1623262328760,"results":"53","hashOfConfig":"33"},{"size":2195,"mtime":1623946732484,"results":"54","hashOfConfig":"33"},{"size":818,"mtime":1623250957144,"results":"55","hashOfConfig":"33"},{"size":1881,"mtime":1623155512889,"results":"56","hashOfConfig":"33"},{"size":111,"mtime":1622394977843,"results":"57","hashOfConfig":"33"},{"size":2849,"mtime":1623265346865,"results":"58","hashOfConfig":"33"},{"size":702,"mtime":1622571608125,"results":"59","hashOfConfig":"33"},{"size":2049,"mtime":1624552460151,"results":"60","hashOfConfig":"33"},{"size":1277,"mtime":1623260187059,"results":"61","hashOfConfig":"33"},{"size":622,"mtime":1624777867224,"results":"62","hashOfConfig":"33"},{"size":1913,"mtime":1623522739662,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},"twydh",{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"67"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"67"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"67"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"67"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"67"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"67"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"67"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"67"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"67"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"67"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"67"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"67"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\index.js",["142"],"import reportWebVitals from './reportWebVitals';\n//import store from './redux/state.js';\nimport store from './redux/redux-store.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport SamuraiJSApp from './App';\n\n\n\n\n\n\n\n\tReactDOM.render(\n\t\t  \n\t\t    \t<SamuraiJSApp  />,\n\t\t  \t\n\t\t\n\t\t  document.getElementById('root')\n\t);\n\n\n\n\nreportWebVitals();",["143","144"],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\App.js",["145","146","147","148","149","150"],"//import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport NavBar from './components/NavBar/NavBar';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport HeaderContainer from './components/Header/header_container';\nimport Login from './components/Login/Login';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { getAuthUserData } from './redux/auth_reducer.js';\nimport { compose } from 'redux';\nimport { initializeApp } from './redux/app_reducer.js';\nimport prelouder from './assets/images/prelouder.gif';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store.js';\n\n\n\nclass App extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n\n  //сработает когда дом будет построен\n    componentDidMount() {\n        this.props.initializeApp()\n      }\n          \n\n\n\n\n  render(){\n    //alert(this.props.initialized)\nif(!this.props.initialized){\n  \n  return  <img src={prelouder} />\n}\n\n\n\n  return (\n  \t\n    <div className=\"app_wrepper\">\n\n      <HeaderContainer />\n      <NavBar />\n      <div className=\"app_wrepper_content\">      \n      <Route path=\"/dialogs\" render={ () => <DialogsContainer /> } />\n      <Route path=\"/profile/:userId?\" render={ () => <ProfileContainer /> } />\n      <Route path=\"/users\" render={ () => <UsersContainer /> } />\n      <Route path=\"/login\" render={ () => <Login /> } />\n      </div>\n     \n     </div>\n     \n  )}\n}\n\n\nlet mapStateToProps = (state) =>{\n  return{\n    initialized: state.app.initialized,\n\n  }\n}\n\n\n\nlet AppContainer =  compose(\n//withRouter,\nconnect(mapStateToProps,{initializeApp}))(App);\n\nlet SamuraiJSApp = (props) => {\n  return   <Router>\n          <Provider store={store}>{/*штука из react-redux, позволяет добратьсядо store из контейнеров компонент*/}\n            \n                <AppContainer  />\n             \n          </Provider>\n </Router>\n\n\n}\n\nexport default SamuraiJSApp;","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\reportWebVitals.js",[],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Header\\Header.js",[],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\NavBar\\NavBar.js",[],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\Profile.js",["151"],"import classes from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n\t\r\n  return (\r\n   <div>\r\n \r\n              <ProfileInfo profile={props.profile}  status={props.status} updateStatus={props.updateStatus} />\r\n          \r\n            <MyPostsContainer store={props.store}/>\r\n           \r\n\r\n            </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Profile;","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\MyPosts\\MyPosts.js",[],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\MyPosts\\Post\\Post.js",[],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Dialogs\\Dialogs.js",["152","153","154","155"],"import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport {sendMessageCreator} from '../../redux/dialog_reduser.js';\r\nimport {updateNewMessageCreator} from '../../redux/dialog_reduser.js';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'; \r\n\r\n\r\nconst DialogItem = (props) =>{\r\n\r\n\tlet path = \"/dialogs/\" + props.id;\r\n\treturn(\r\n\t<div className={classes.dialog}>\r\n\t    <NavLink to={path} activeClassName={classes.active}>\r\n\t    <div className={classes.dialogs_ava}> \r\n\t    <img src=\"img/nicol.jpg\" alt=\"\"></img> \r\n\t     </div>\r\n\t    {props.name}\r\n\t    </NavLink>\r\n\t</div>\r\n\t)\r\n}\r\n\r\nconst Massage = (props) =>{\r\n\treturn(\r\n\t<div className={classes.massage}>\r\n\t    \t\t\t{props.massage}\r\n\t   </div>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\t\r\n//console.log(props)\r\n\r\n\tlet addMassag = (massage) =>{\r\n\t\talert(massage);\r\n\t\t props.onAddMassag(massage);\r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\tlet MessageChange = (event) =>{\r\n\t\tlet body = event.target.value;\r\n\t\t// props.onMessageChange(body);\r\n\t};\r\n\r\n\t\r\n\t\r\n\t//каждый элемент мы преобразовываем в компоненту DialogItem с получеными данными\r\n\tlet dialogElement = props.massagesPage.dialogsData.map( (elem) => {\r\n\t\treturn [\r\n\t\t\t<DialogItem name={elem.name} id={elem.id} key={elem.id}/>\r\n\t\t]\r\n\t});\r\n\t\r\n\r\n\t/*каждый элемент мы преобразовываем в компоненту Massage с получеными данными*/\r\n\tlet dialogMasstges = props.massagesPage.massagesData.map( (elem) => {\r\n\t\treturn [\r\n\t\t\t<Massage massage={elem.massage} key={elem.id}/>\r\n\t\t]\r\n\t});\r\n\r\nif(!props.isAuth) return <Redirect to={\"/Login\"} />\r\n\r\n\t  return (\r\n\r\n\r\n\t\t\t<div className={classes.dialogs}>\r\n\r\n\t\t\t\t<div className={classes.dialogs_items}>\t\t\r\n\t\t\t\t\t{dialogElement}\t    \t\r\n\t\t  \t\t</div>\r\n\r\n\t\t\t    <div className={classes.massages}>\r\n\t\t\t    \t{dialogMasstges}\t\r\n\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t    \t<AddMassagForm addMassag={addMassag}/>\r\n\t    \t\t\r\n\t\t\t    </div>\r\n\r\n\r\n\r\n\r\n\t   \t  \t</div>\r\n\t   )\r\n}\r\n\r\n\r\nconst AddMassagForm = (props) => {\r\n\treturn(\r\n\r\n<div>\r\n     <Formik\r\n       initialValues={{ massage: ''}}\r\n       validate={values => {\r\n         const errors = {};\r\n         if (!values.massage) {\r\n           errors.massage = 'Required';\r\n         }\r\n         return errors;\r\n       }}\r\n       onSubmit={(values, { setSubmitting }) => {\r\n         \r\n          // alert(JSON.stringify(values, null, 2));\r\n           //alert(values.massage);\r\n           props.addMassag(values.massage)\r\n\r\n       }}\r\n     >\r\n       {({ isSubmitting }) => (\r\n         <Form>\r\n\t         <div>\r\n\t           <Field placeholder={\"massage\"} className={classes.massage_input} type=\"text\" name=\"massage\" />\r\n\t           <ErrorMessage className={classes.massage_error} name=\"massage\" component=\"div\" />\r\n           </div>\r\n           <div>\r\n           \t\t<button type=\"submit\" className={classes.massage_button} disabled={isSubmitting}>Add Massag</button>\r\n           </div>\r\n         </Form>\r\n       )}\r\n     </Formik>\r\n   </div>\r\n\r\n\t\t)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Dialogs;","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.js",["156","157"],"import classes from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport prelouder from '../../../assets/images/prelouder.gif';\r\nconst ProfileInfo = (props) => {\r\n\tif(!props.profile){\r\n\t\treturn (\r\n\t\t\t<div><img src={prelouder} /></div>\r\n\t\t\t)\r\n\r\n\t\t\t\t}else{\r\n\t\t  return (\r\n  \r\n              <div className={classes.profile_info}>\r\n                <div className={classes.content_img}><img src={props.profile.photos.large} alt=\"\"></img></div>\r\n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n\r\n            \r\n          <div className={classes.ava_descriptioin}><span>id</span>  -  {props.profile.userId}</div>\r\n          <div className={classes.ava_descriptioin}><span>name</span>  -   {props.profile.fullName}</div>\r\n         <div className={classes.ava_descriptioin}><span>aboutMe</span>  -  {props.profile.aboutMe}</div>\r\n              </div>\r\n\r\n            \r\n   )\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default ProfileInfo;","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\render.js",[],["158","159"],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\dialog_reduser.js",["160","161"],"\r\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n      massagesData: [\r\n        {id: 1, massage:\"hi\"},\r\n        {id: 2, massage:\"hui\"},\r\n        {id: 3, massage:\"hoi\"},\r\n        {id: 3, massage:\"hei\"},\r\n      ],\r\n      dialogsData: [\r\n        {id: 1, name:\"Pasha\"},\r\n        {id: 2, name:\"Dima\"},\r\n        {id: 3, name:\"Vova\"},\r\n        {id: 4, name:\"Sasha\"}\r\n      ],\r\n      NewMessageBody:'',\r\n}\r\n\r\n\r\n\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n//урок 47 12 мин, обьяснение. делаем копию обьекта с помощью ...\r\n\r\n\r\nswitch (action.type) {\r\n\r\n  case UPDATE_NEW_MESSAGE_BODY:\r\n     return {...state,//делаем глубинную копию\r\n                 NewMessageBody: action.body\r\n     };\r\n    break;\r\n\r\n\r\n\r\n  case SEND_MESSAGE:\r\n  let body = action.massage;\r\n  return {...state,//делаем глубинную копию\r\n                 NewMessageBody: '',\r\n                massagesData: [...state.massagesData, {id: 6, massage:body}],//по старому тут так писалось stateCopy.massagesData.push({id: 6, massage:body});\r\n                \r\n  }\r\n    break;\r\n\r\n\r\n\r\n  default:\r\n   return state;\r\n}\r\n\r\n\r\n\r\n\t\r\n}\r\n\r\n\r\n\r\n\r\n//action creator импортим его в Dialogs.js\r\nexport const sendMessageCreator = (massage) =>{\r\n  //console.log(massage)\r\n  return{\r\n    type: SEND_MESSAGE,\r\n    massage: massage\r\n  }\r\n}\r\n//action creator импортим его в Dialogs.js\r\nexport const updateNewMessageCreator = (body) =>{\r\n  return{\r\n    type: UPDATE_NEW_MESSAGE_BODY,\r\n    body:body\r\n  }\r\n}\r\n\r\nexport default dialogReducer;","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\prpofile_reducer.js",["162"],"import {usersAPI} from '../api/api.js';\r\nimport {profileAPI} from '../api/api.js';\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n  postData: [\r\n        {id: 1, massage:\"hellow, i love porn\", likesCount: 12},\r\n        {id: 2, massage:\"kolj ebanashka\", likesCount: 3},\r\n      ],\r\n      newPostText: \"newPostText---perdole\",\r\n      profile: null,\r\n      status: \"\"\r\n\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  \r\n//урок 47 12 мин, обьяснение. делаем копию обьекта с помощью ...\r\nswitch (action.type) {\r\n  case ADD_POST:{\r\n    let newPost = {\r\n\t\t\t\tid: 3,\r\n\t\t\t\tmassage: state.newPostText,\r\n\t\t\t\tlikesCount: 4\r\n\t\t\t};\r\n\r\n      return {//делаем глубинную копию\r\n        ...state,\r\n        postData:[...state.postData, newPost],\r\n        newPostText: ''\r\n      }\r\n\r\n   }\r\n   case DELETE_POST:{//action creator делаем через tdd\r\n //здесь у меня не получилось так как у димыча и я использовал метод splice\r\nlet newarr = state.postData.splice(action.postId, 1);//Помните, что Splice изменяет исходный массив, поэтому, когда вы делаете\r\n\r\n         return {//делаем глубинную копию\r\n        //...state, postData: state.postData.filter(p => p.id != action.postId)//Метод filter() создаёт новый массив со всеми элементами, прошедшими проверку, задаваемую в передаваемой функции.\r\n     \r\n      ...state, postData: state.postData\r\n      }\r\n   }\r\n  case UPDATE_NEW_POST_TEXT:{\r\n   // console.log(state);\r\n\t\t\t\treturn {//делаем глубинную копию\r\n          ...state,\r\n          newPostText:action.newText\r\n        }\r\n  }\r\n\r\n\r\n\r\n\r\n    case SET_USER_PROFILE:{\r\n   // console.log(state);\r\n        return {//делаем глубинную копию\r\n          ...state,\r\n          profile:action.profile\r\n        }\r\n  }\r\n\r\n     case SET_STATUS:{\r\n   // console.log(state);\r\n        return {//делаем глубинную копию\r\n          ...state,\r\n          status:action.status\r\n        }\r\n  }\r\n\r\n\r\n\r\n  default:\r\n    return state;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n//action creator импортим его в MyPosts.js\r\nexport const addPostActionCreator = () =>{\r\n  return{\r\n    type: ADD_POST,\r\n  }\r\n}\r\n\r\n//action creator делаем через tdd\r\nexport const deletePost = (postId) =>{\r\n  return{\r\n    type: DELETE_POST,\r\n  }\r\n}\r\n\r\n\r\n//action creator импортим его в MyPosts.js\r\nexport const updateNewPostActionCreator = (text) =>{\r\n  return{\r\n    type: UPDATE_NEW_POST_TEXT,\r\n    newText:text\r\n  }\r\n}\r\n\r\nexport const setUsersProfile = (profile) =>{\r\n  return{\r\n    type: SET_USER_PROFILE,\r\n    profile:profile\r\n  }\r\n}\r\n\r\nexport const setStatus = (status) =>{\r\n  return{\r\n    type: SET_STATUS,\r\n    status:status\r\n  }\r\n}\r\n//это санка\r\nexport const getUsersProfile = (userId) =>{\r\n  return(dispatch) =>{\r\n   usersAPI.getProfile(userId).then(response =>{\r\n          dispatch(setUsersProfile(response.data));\r\n      })\r\n  }\r\n}\r\n\r\n//это санка\r\nexport const getStatus = (userId) =>{\r\n  return(dispatch) =>{\r\n   profileAPI.getStatus(userId).then(response =>{\r\n          dispatch(setStatus(response.data));\r\n      })\r\n  }\r\n}\r\n\r\n//это санка\r\nexport const updateStatus = (status) =>{\r\n  return(dispatch) =>{\r\n   profileAPI.updateStatus(status).then(response =>{\r\n    if(response.data.resultCode === 0 ){\r\n      dispatch(setStatus(status));\r\n    }\r\n          \r\n      })\r\n  }\r\n}\r\n\r\nexport default profileReducer;","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\redux-store.js",[],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\MyPosts\\MyPostsContainer.js",["163"],"import React from 'react';\r\nimport MyPosts from './MyPosts';\r\nimport {updateNewPostActionCreator} from '../../../redux/prpofile_reducer.js';\r\nimport {addPostActionCreator} from '../../../redux/prpofile_reducer.js';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n// эта функция передает свойства\r\nlet mapStateToProps = (state) =>{\r\n\treturn{\r\n\t\tprofilePage: state.profilePage\r\n\r\n\t}\r\n}\r\n//эта функция передает функции которые мы будем потом использовать в призентациооной компоненте\r\nlet mapDispatchToProps = (dispatch) =>{\r\n\treturn{\r\n\t\tonPostChange:  (text) => {\r\n\t\t\tdispatch(updateNewPostActionCreator(text));\r\n\t\t},\r\n\t\tonAddPost: () => {\r\n\t\t\tdispatch(addPostActionCreator());\r\n\t\t}\r\n\r\n\t\t\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Dialogs\\DialogsContainer.js",["164","165"],"import React from 'react';\r\nimport { NavLink} from 'react-router-dom';\r\nimport {sendMessageCreator} from '../../redux/dialog_reduser.js';\r\nimport {updateNewMessageCreator} from '../../redux/dialog_reduser.js';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect.js';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\n\r\n// эта функция передает свойства\r\nlet mapStateToProps = (state) =>{\r\n\treturn{\r\n\t\tmassagesPage: state.massagesPage,\r\n\t}\r\n}\r\n//эта функция передает функции которые мы будем потом использовать в призентациооной компоненте\r\nlet mapDispatchToProps = (dispatch) =>{\r\n\treturn{\r\n\t\tonMessageChange:  (body) => {\r\n\t\t\tdispatch(updateNewMessageCreator(body));\r\n\t\t},\r\n\t\tonAddMassag: (massage) => {\r\n\t\t\tdispatch(sendMessageCreator(massage));\r\n\t\t}\r\n\r\n\t\t\r\n\t}\r\n}\r\n\r\n\r\n\r\n//это хок который проверят авторизацию\r\n//let AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n\r\n//connect внутри использует subscribe, он следит отдельно для этой компоненты когда state измениться\r\n// но сам state не изменяеться потому что мы менять его неможем, мы делаем копию, и он следит когда появится новая копия и тогда уже перерисовывается\r\n//const DialogsContainer = connect(mapStateToProps,mapDispatchToProps)(AuthRedirectComponent);\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps,mapDispatchToProps),\r\n\twithAuthRedirect\r\n\t)(Dialogs);","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Users\\Users.js",["166","167","168","169","170"],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Users\\UsersContainer.js",["171","172","173","174","175","176"],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\users_reduser.js",["177","178","179","180","181","182","183"],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\common\\Prelouder\\Prelouder.js",["184"],"import React from 'react';\r\nimport prelouder from '../../../assets/images/prelouder.gif';\r\n\r\n\r\nlet Prelouder = (props) => {\r\n\r\nreturn(\r\n\r\n<div>\r\n{props.isFetching ? <img src={prelouder} /> : null}\r\n\r\n</div>\r\n\t\r\n)\r\n\r\n\r\n}\t\r\n\r\nexport default Prelouder;","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\ProfileContainer.js",["185","186","187","188","189","190"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {getUsersProfile, getStatus, updateStatus} from '../../redux/prpofile_reducer.js';//тут ошибка в названиее prpofile_reducer\r\nimport Profile from './Profile';\r\nimport * as axios from 'axios';//в axios есть куча всего, * значит что все что есть в axios мы запиздячили в наш axios и теперь через него у нас есть доступ ко всему что там есть.\r\nimport { withRouter } from \"react-router\";\r\nimport {usersAPI} from '../../api/api.js';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect.js';\r\nimport { compose } from 'redux';\r\n\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\n//оберточная компонента которая работает с сервером\r\nclass ProfileAPIContainer extends React.Component {\r\n\t\tconstructor(props) {\r\n\t    super(props);\r\n\t  }\r\n\r\n\r\n\t//сработает когда дом будет построен\r\n\t\tcomponentDidMount() {\r\n\t\t\tlet userId = this.props.match.params.userId;\r\n\t\t\tif(!userId){\r\n\t\t\t\tuserId = this.props.my_id;\r\n\t\t\t\tif(!userId){\r\n\t\t\t\t\tthis.props.history.push(\"/users\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n       \t\tthis.props.getUsersProfile(userId);//это санка\r\n       \t\tthis.props.getStatus(userId);//это санка\r\n\r\n\t\t  }\r\n\r\n\r\n\r\n\r\n\trender(){\r\n\t\t return (\r\n  \t\t\t <div>\r\n              <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n\t  \t\t\t\t )\r\n\t\t}\r\n\t \r\n\t}\r\n\r\n\r\n//это хок который проверят авторизацию\r\n//let AuthRedirectComponent = withAuthRedirect(ProfileAPIContainer)\r\n\r\n/*let mapStateToPropsForRedirect = (state) =>({\r\n\tisAuth: state.auth.isAuth\r\n});\r\nAuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent);*/\r\n\r\n//let withUrlDataProfileAPIContainer = withRouter(AuthRedirectComponent);//withRouter как и connect вернет ProfileAPIContainer но уже с добавлениями данных из url\r\n\r\n\r\n\r\n///////////////////////////////////////////////////////////////////оберточная компонента которая работает с стором\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>({\r\n\tprofile: state.profilePage.profile,\r\n\tstatus: state.profilePage.status,\r\n\tmy_id: state.auth.id,\r\n});\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps,{getUsersProfile,getStatus,updateStatus}),//добавляет инфу Props в из State\r\n\twithRouter,//Компонент высшего порядка,withRouter как и connect вернет компоненту но уже с добавлениями данных из url\r\n\t//withAuthRedirect//проверка на авторизацию\r\n\t)(ProfileAPIContainer);\r\n\r\n//export default connect(mapStateToProps,{getUsersProfile})(withUrlDataProfileAPIContainer);","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\auth_reducer.js",[],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Header\\header_container.js",["191","192","193","194"],"import React from 'react';\r\nimport  classes from './Header.module.css';\r\nimport { NavLink} from 'react-router-dom';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport {authAPI} from '../../api/api.js';\r\nimport { logout} from '../../redux/auth_reducer.js';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\tconstructor(props) {\r\n\t    super(props);\r\n\t  }\r\n\r\n\t\tcomponentDidMount() {\r\n\t\t\r\n\t\t\t//this.props.getAuthUserData() /// перенесли это в app.js\r\n\r\n\t\t  }\r\n\r\n\r\n\r\n\r\n\trender(){\r\n\r\n  return (\r\n\t\t\t<Header {...this.props}/> \r\n  \t  )\r\n}\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n\treturn{\r\n\t\tid: state.auth.id,\r\n\t\temail: state.auth.email,\r\n\t\tlogin: state.auth.login,\r\n\t\tisAuth: state.auth.isAuth,\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,{logout})(HeaderContainer);","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\api\\api.js",[],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Login\\login.js",[],["195","196"],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Login\\Login.js",[],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\hoc\\withAuthRedirect.js",[],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.js",["197"],"import classes from './ProfileInfo.module.css';\r\nimport React from 'react';\r\n\r\n\r\nclass ProfileStatus extends React.Component{\r\n\r\n\t\tconstructor(props) {\r\n\t    super(props);\r\n\t  }\r\n\r\n\r\n//у классовой компоненты есть локальный state\r\nstate = {\r\n\teditMode: false,\r\n\tstatus: this.props.status//засунули глобальный state  в локальный\r\n}\r\n\r\n\r\nactivateEditMod = () => {\r\n\t//локальный state меняется только через функцию this.setState которую он взял из React.Component\r\n\t//работает асинхронно\r\n\tthis.setState({\r\n\t\teditMode: true\r\n\t})\r\n}\r\n\r\ndeActivateEditMod = () => {\r\n\t//локальный state меняется только через функцию this.setState которую он взял из React.Component\r\n\t//работает асинхронно\r\n\tthis.setState({\r\n\t\teditMode: false\r\n\t});\r\n\tthis.props.updateStatus(this.state.status);//когда фокус снимаеться с инпута то сразу отправиться новый статус в базу\r\n}\r\n\r\nonStatusChange = (e) => {\r\n\tthis.setState({\r\n\t\tstatus: e.currentTarget.value\r\n\t});\r\n\r\n\r\n}\r\n//сработает когда либо пропсы изменяться либо локальный стейт измениться\r\ncomponentDidUpdate(prevProps, prevState){\r\n\tif(prevProps.status !== this.props.status){\r\n\t\tthis.setState({\r\n\t\t\tstatus: this.props.status\r\n\t\t})\r\n\t}\r\n}\r\n\r\n\r\nrender(){\r\n\t\treturn (\r\n\t\t\t<div className={classes.profile_status}>\r\n\t\t\t{console.log('tttotot')}\r\n\t\t\t\t{!this.state.editMode &&\r\n\t\t\t    \t<div>\r\n\t\t\t    \t\t<span onDoubleClick={ this.activateEditMod  }>{this.props.status || \"_____\"}</span>\r\n\t\t\t    \t</div> \r\n\t\t    \t}\r\n\t\t    \t{this.state.editMode &&\r\n\t\t\t    \t<div>\r\n\t\t\t    \t\t<input onChange={this.onStatusChange} autoFocus={true} onBlur={ this.deActivateEditMod  } type=\"text\" value={this.state.status} />\r\n\t\t\t    \t</div> \r\n\t\t    \t}\r\n\t\t     </div>       \r\n   )\r\n\t\r\n\r\n}\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default ProfileStatus;","D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\app_reducer.js",[],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\redux\\users_selectors.js",[],"D:\\dev\\7_set\\front\\js\\react\\poligon\\react_ninja_one\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.js",[],{"ruleId":"198","severity":1,"message":"199","line":3,"column":8,"nodeType":"200","messageId":"201","endLine":3,"endColumn":13},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"198","severity":1,"message":"206","line":4,"column":8,"nodeType":"200","messageId":"201","endLine":4,"endColumn":16},{"ruleId":"198","severity":1,"message":"207","line":13,"column":3,"nodeType":"200","messageId":"201","endLine":13,"endColumn":9},{"ruleId":"198","severity":1,"message":"208","line":15,"column":3,"nodeType":"200","messageId":"201","endLine":15,"endColumn":7},{"ruleId":"198","severity":1,"message":"209","line":18,"column":10,"nodeType":"200","messageId":"201","endLine":18,"endColumn":25},{"ruleId":"210","severity":1,"message":"211","line":28,"column":5,"nodeType":"212","messageId":"213","endLine":30,"endColumn":6},{"ruleId":"214","severity":1,"message":"215","line":45,"column":11,"nodeType":"216","endLine":45,"endColumn":34},{"ruleId":"198","severity":1,"message":"217","line":1,"column":8,"nodeType":"200","messageId":"201","endLine":1,"endColumn":15},{"ruleId":"198","severity":1,"message":"218","line":4,"column":9,"nodeType":"200","messageId":"201","endLine":4,"endColumn":27},{"ruleId":"198","severity":1,"message":"219","line":5,"column":9,"nodeType":"200","messageId":"201","endLine":5,"endColumn":32},{"ruleId":"198","severity":1,"message":"220","line":48,"column":6,"nodeType":"200","messageId":"201","endLine":48,"endColumn":19},{"ruleId":"198","severity":1,"message":"221","line":49,"column":7,"nodeType":"200","messageId":"201","endLine":49,"endColumn":11},{"ruleId":"198","severity":1,"message":"222","line":2,"column":8,"nodeType":"200","messageId":"201","endLine":2,"endColumn":21},{"ruleId":"214","severity":1,"message":"215","line":8,"column":9,"nodeType":"216","endLine":8,"endColumn":32},{"ruleId":"202","replacedBy":"223"},{"ruleId":"204","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":34,"column":5,"nodeType":"227","messageId":"228","endLine":34,"endColumn":11},{"ruleId":"225","severity":1,"message":"226","line":45,"column":5,"nodeType":"227","messageId":"228","endLine":45,"endColumn":11},{"ruleId":"198","severity":1,"message":"229","line":41,"column":5,"nodeType":"200","messageId":"201","endLine":41,"endColumn":11},{"ruleId":"198","severity":1,"message":"230","line":1,"column":8,"nodeType":"200","messageId":"201","endLine":1,"endColumn":13},{"ruleId":"198","severity":1,"message":"230","line":1,"column":8,"nodeType":"200","messageId":"201","endLine":1,"endColumn":13},{"ruleId":"198","severity":1,"message":"231","line":2,"column":10,"nodeType":"200","messageId":"201","endLine":2,"endColumn":17},{"ruleId":"198","severity":1,"message":"232","line":3,"column":13,"nodeType":"200","messageId":"201","endLine":3,"endColumn":18},{"ruleId":"198","severity":1,"message":"233","line":5,"column":9,"nodeType":"200","messageId":"201","endLine":5,"endColumn":17},{"ruleId":"198","severity":1,"message":"234","line":6,"column":27,"nodeType":"200","messageId":"201","endLine":6,"endColumn":36},{"ruleId":"198","severity":1,"message":"235","line":28,"column":5,"nodeType":"200","messageId":"201","endLine":28,"endColumn":16},{"ruleId":"214","severity":1,"message":"215","line":87,"column":42,"nodeType":"216","endLine":87,"endColumn":119},{"ruleId":"198","severity":1,"message":"236","line":5,"column":2,"nodeType":"200","messageId":"201","endLine":5,"endColumn":10},{"ruleId":"198","severity":1,"message":"237","line":7,"column":2,"nodeType":"200","messageId":"201","endLine":7,"endColumn":20},{"ruleId":"198","severity":1,"message":"238","line":8,"column":2,"nodeType":"200","messageId":"201","endLine":8,"endColumn":15},{"ruleId":"198","severity":1,"message":"232","line":29,"column":13,"nodeType":"200","messageId":"201","endLine":29,"endColumn":18},{"ruleId":"198","severity":1,"message":"233","line":30,"column":9,"nodeType":"200","messageId":"201","endLine":30,"endColumn":17},{"ruleId":"210","severity":1,"message":"211","line":35,"column":3,"nodeType":"212","messageId":"213","endLine":37,"endColumn":5},{"ruleId":"225","severity":1,"message":"226","line":40,"column":7,"nodeType":"227","messageId":"228","endLine":40,"endColumn":13},{"ruleId":"225","severity":1,"message":"226","line":51,"column":7,"nodeType":"227","messageId":"228","endLine":51,"endColumn":13},{"ruleId":"225","severity":1,"message":"226","line":57,"column":7,"nodeType":"227","messageId":"228","endLine":57,"endColumn":13},{"ruleId":"225","severity":1,"message":"226","line":63,"column":7,"nodeType":"227","messageId":"228","endLine":63,"endColumn":13},{"ruleId":"225","severity":1,"message":"226","line":69,"column":7,"nodeType":"227","messageId":"228","endLine":69,"endColumn":13},{"ruleId":"239","severity":1,"message":"240","line":80,"column":56,"nodeType":"241","messageId":"242","endLine":80,"endColumn":58},{"ruleId":"225","severity":1,"message":"226","line":82,"column":7,"nodeType":"227","messageId":"228","endLine":82,"endColumn":13},{"ruleId":"214","severity":1,"message":"215","line":10,"column":21,"nodeType":"216","endLine":10,"endColumn":44},{"ruleId":"198","severity":1,"message":"232","line":5,"column":13,"nodeType":"200","messageId":"201","endLine":5,"endColumn":18},{"ruleId":"198","severity":1,"message":"233","line":7,"column":9,"nodeType":"200","messageId":"201","endLine":7,"endColumn":17},{"ruleId":"198","severity":1,"message":"243","line":8,"column":9,"nodeType":"200","messageId":"201","endLine":8,"endColumn":25},{"ruleId":"198","severity":1,"message":"231","line":11,"column":10,"nodeType":"200","messageId":"201","endLine":11,"endColumn":17},{"ruleId":"198","severity":1,"message":"244","line":11,"column":19,"nodeType":"200","messageId":"201","endLine":11,"endColumn":27},{"ruleId":"210","severity":1,"message":"211","line":14,"column":3,"nodeType":"212","messageId":"213","endLine":16,"endColumn":5},{"ruleId":"198","severity":1,"message":"217","line":2,"column":9,"nodeType":"200","messageId":"201","endLine":2,"endColumn":16},{"ruleId":"198","severity":1,"message":"231","line":3,"column":10,"nodeType":"200","messageId":"201","endLine":3,"endColumn":17},{"ruleId":"198","severity":1,"message":"245","line":6,"column":9,"nodeType":"200","messageId":"201","endLine":6,"endColumn":16},{"ruleId":"210","severity":1,"message":"211","line":10,"column":2,"nodeType":"212","messageId":"213","endLine":12,"endColumn":5},{"ruleId":"202","replacedBy":"246"},{"ruleId":"204","replacedBy":"247"},{"ruleId":"210","severity":1,"message":"211","line":7,"column":3,"nodeType":"212","messageId":"213","endLine":9,"endColumn":5},"no-unused-vars","'store' is defined but never used.","Identifier","unusedVar","no-native-reassign",["248"],"no-negated-in-lhs",["249"],"'ReactDOM' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'getAuthUserData' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'classes' is defined but never used.","'sendMessageCreator' is defined but never used.","'updateNewMessageCreator' is defined but never used.","'MessageChange' is assigned a value but never used.","'body' is assigned a value but never used.","'ProfileStatus' is defined but never used.",["248"],["249"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'newarr' is assigned a value but never used.","'React' is defined but never used.","'NavLink' is defined but never used.","'axios' is defined but never used.","'usersAPI' is defined but never used.","'useEffect' is defined but never used.","'slice_pages' is assigned a value but never used.","'setUsers' is defined but never used.","'setTotalUsersCount' is defined but never used.","'toggleFeching' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'withAuthRedirect' is defined but never used.","'Redirect' is defined but never used.","'authAPI' is defined but never used.",["248"],["249"],"no-global-assign","no-unsafe-negation"]